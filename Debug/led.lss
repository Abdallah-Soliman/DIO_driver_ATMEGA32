
led.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000998  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .stab         00000b94  00000000  00000000  000009ec  2**2
                  CONTENTS, READONLY, DEBUGGING
  2 .stabstr      00000648  00000000  00000000  00001580  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   8:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  10:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  14:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  18:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  1c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  20:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  24:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  28:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  2c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  30:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  34:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  38:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  3c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  40:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  44:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  48:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  4c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  50:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61
  60:	0e 94 a0 04 	call	0x940	; 0x940 <main>
  64:	0c 94 ca 04 	jmp	0x994	; 0x994 <_exit>

00000068 <__bad_interrupt>:
  68:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000006c <DIO_SetPinDirection>:

#include "DIO_private.h"
#include "DIO_private.h"
#include "DIO_Error_state.h"
uint8_t DIO_SetPinDirection(uint8_t au8_PORT , uint8_t au8_PIN , uint8_t au8_DIRECTION)
{
  6c:	df 93       	push	r29
  6e:	cf 93       	push	r28
  70:	00 d0       	rcall	.+0      	; 0x72 <DIO_SetPinDirection+0x6>
  72:	00 d0       	rcall	.+0      	; 0x74 <DIO_SetPinDirection+0x8>
  74:	00 d0       	rcall	.+0      	; 0x76 <DIO_SetPinDirection+0xa>
  76:	cd b7       	in	r28, 0x3d	; 61
  78:	de b7       	in	r29, 0x3e	; 62
  7a:	8a 83       	std	Y+2, r24	; 0x02
  7c:	6b 83       	std	Y+3, r22	; 0x03
  7e:	4c 83       	std	Y+4, r20	; 0x04
	uint8_t au8_errorstate = DIO_SUCCESS ;
  80:	84 e0       	ldi	r24, 0x04	; 4
  82:	89 83       	std	Y+1, r24	; 0x01
	switch (au8_PORT)
  84:	8a 81       	ldd	r24, Y+2	; 0x02
  86:	28 2f       	mov	r18, r24
  88:	30 e0       	ldi	r19, 0x00	; 0
  8a:	3e 83       	std	Y+6, r19	; 0x06
  8c:	2d 83       	std	Y+5, r18	; 0x05
  8e:	8d 81       	ldd	r24, Y+5	; 0x05
  90:	9e 81       	ldd	r25, Y+6	; 0x06
  92:	81 30       	cpi	r24, 0x01	; 1
  94:	91 05       	cpc	r25, r1
  96:	09 f4       	brne	.+2      	; 0x9a <DIO_SetPinDirection+0x2e>
  98:	47 c0       	rjmp	.+142    	; 0x128 <DIO_SetPinDirection+0xbc>
  9a:	2d 81       	ldd	r18, Y+5	; 0x05
  9c:	3e 81       	ldd	r19, Y+6	; 0x06
  9e:	22 30       	cpi	r18, 0x02	; 2
  a0:	31 05       	cpc	r19, r1
  a2:	2c f4       	brge	.+10     	; 0xae <DIO_SetPinDirection+0x42>
  a4:	8d 81       	ldd	r24, Y+5	; 0x05
  a6:	9e 81       	ldd	r25, Y+6	; 0x06
  a8:	00 97       	sbiw	r24, 0x00	; 0
  aa:	71 f0       	breq	.+28     	; 0xc8 <DIO_SetPinDirection+0x5c>
  ac:	cc c0       	rjmp	.+408    	; 0x246 <DIO_SetPinDirection+0x1da>
  ae:	2d 81       	ldd	r18, Y+5	; 0x05
  b0:	3e 81       	ldd	r19, Y+6	; 0x06
  b2:	22 30       	cpi	r18, 0x02	; 2
  b4:	31 05       	cpc	r19, r1
  b6:	09 f4       	brne	.+2      	; 0xba <DIO_SetPinDirection+0x4e>
  b8:	67 c0       	rjmp	.+206    	; 0x188 <DIO_SetPinDirection+0x11c>
  ba:	8d 81       	ldd	r24, Y+5	; 0x05
  bc:	9e 81       	ldd	r25, Y+6	; 0x06
  be:	83 30       	cpi	r24, 0x03	; 3
  c0:	91 05       	cpc	r25, r1
  c2:	09 f4       	brne	.+2      	; 0xc6 <DIO_SetPinDirection+0x5a>
  c4:	91 c0       	rjmp	.+290    	; 0x1e8 <DIO_SetPinDirection+0x17c>
  c6:	bf c0       	rjmp	.+382    	; 0x246 <DIO_SetPinDirection+0x1da>
	{
		case PORTA: if (au8_DIRECTION==INPUT)
  c8:	8c 81       	ldd	r24, Y+4	; 0x04
  ca:	88 23       	and	r24, r24
  cc:	a9 f4       	brne	.+42     	; 0xf8 <DIO_SetPinDirection+0x8c>
					{
						CLR_BIT(DDRA_REG,au8_PIN);
  ce:	aa e3       	ldi	r26, 0x3A	; 58
  d0:	b0 e0       	ldi	r27, 0x00	; 0
  d2:	ea e3       	ldi	r30, 0x3A	; 58
  d4:	f0 e0       	ldi	r31, 0x00	; 0
  d6:	80 81       	ld	r24, Z
  d8:	48 2f       	mov	r20, r24
  da:	8b 81       	ldd	r24, Y+3	; 0x03
  dc:	28 2f       	mov	r18, r24
  de:	30 e0       	ldi	r19, 0x00	; 0
  e0:	81 e0       	ldi	r24, 0x01	; 1
  e2:	90 e0       	ldi	r25, 0x00	; 0
  e4:	02 2e       	mov	r0, r18
  e6:	02 c0       	rjmp	.+4      	; 0xec <DIO_SetPinDirection+0x80>
  e8:	88 0f       	add	r24, r24
  ea:	99 1f       	adc	r25, r25
  ec:	0a 94       	dec	r0
  ee:	e2 f7       	brpl	.-8      	; 0xe8 <DIO_SetPinDirection+0x7c>
  f0:	80 95       	com	r24
  f2:	84 23       	and	r24, r20
  f4:	8c 93       	st	X, r24
  f6:	a9 c0       	rjmp	.+338    	; 0x24a <DIO_SetPinDirection+0x1de>
					}
					else if(au8_DIRECTION==OUTPUT)
  f8:	8c 81       	ldd	r24, Y+4	; 0x04
  fa:	81 30       	cpi	r24, 0x01	; 1
  fc:	09 f0       	breq	.+2      	; 0x100 <DIO_SetPinDirection+0x94>
  fe:	a5 c0       	rjmp	.+330    	; 0x24a <DIO_SetPinDirection+0x1de>
					{
						SET_BIT(DDRA_REG,au8_PIN);
 100:	aa e3       	ldi	r26, 0x3A	; 58
 102:	b0 e0       	ldi	r27, 0x00	; 0
 104:	ea e3       	ldi	r30, 0x3A	; 58
 106:	f0 e0       	ldi	r31, 0x00	; 0
 108:	80 81       	ld	r24, Z
 10a:	48 2f       	mov	r20, r24
 10c:	8b 81       	ldd	r24, Y+3	; 0x03
 10e:	28 2f       	mov	r18, r24
 110:	30 e0       	ldi	r19, 0x00	; 0
 112:	81 e0       	ldi	r24, 0x01	; 1
 114:	90 e0       	ldi	r25, 0x00	; 0
 116:	02 2e       	mov	r0, r18
 118:	02 c0       	rjmp	.+4      	; 0x11e <DIO_SetPinDirection+0xb2>
 11a:	88 0f       	add	r24, r24
 11c:	99 1f       	adc	r25, r25
 11e:	0a 94       	dec	r0
 120:	e2 f7       	brpl	.-8      	; 0x11a <DIO_SetPinDirection+0xae>
 122:	84 2b       	or	r24, r20
 124:	8c 93       	st	X, r24
 126:	91 c0       	rjmp	.+290    	; 0x24a <DIO_SetPinDirection+0x1de>
					else
					{
						//do noting
					}
					break;
		case PORTB: if (au8_DIRECTION==INPUT)
 128:	8c 81       	ldd	r24, Y+4	; 0x04
 12a:	88 23       	and	r24, r24
 12c:	a9 f4       	brne	.+42     	; 0x158 <DIO_SetPinDirection+0xec>
					{
						CLR_BIT(DDRB_REG,au8_PIN);
 12e:	a7 e3       	ldi	r26, 0x37	; 55
 130:	b0 e0       	ldi	r27, 0x00	; 0
 132:	e7 e3       	ldi	r30, 0x37	; 55
 134:	f0 e0       	ldi	r31, 0x00	; 0
 136:	80 81       	ld	r24, Z
 138:	48 2f       	mov	r20, r24
 13a:	8b 81       	ldd	r24, Y+3	; 0x03
 13c:	28 2f       	mov	r18, r24
 13e:	30 e0       	ldi	r19, 0x00	; 0
 140:	81 e0       	ldi	r24, 0x01	; 1
 142:	90 e0       	ldi	r25, 0x00	; 0
 144:	02 2e       	mov	r0, r18
 146:	02 c0       	rjmp	.+4      	; 0x14c <DIO_SetPinDirection+0xe0>
 148:	88 0f       	add	r24, r24
 14a:	99 1f       	adc	r25, r25
 14c:	0a 94       	dec	r0
 14e:	e2 f7       	brpl	.-8      	; 0x148 <DIO_SetPinDirection+0xdc>
 150:	80 95       	com	r24
 152:	84 23       	and	r24, r20
 154:	8c 93       	st	X, r24
 156:	79 c0       	rjmp	.+242    	; 0x24a <DIO_SetPinDirection+0x1de>
					}
					else if(au8_DIRECTION==OUTPUT)
 158:	8c 81       	ldd	r24, Y+4	; 0x04
 15a:	81 30       	cpi	r24, 0x01	; 1
 15c:	09 f0       	breq	.+2      	; 0x160 <DIO_SetPinDirection+0xf4>
 15e:	75 c0       	rjmp	.+234    	; 0x24a <DIO_SetPinDirection+0x1de>
					{
						SET_BIT(DDRB_REG,au8_PIN);
 160:	a7 e3       	ldi	r26, 0x37	; 55
 162:	b0 e0       	ldi	r27, 0x00	; 0
 164:	e7 e3       	ldi	r30, 0x37	; 55
 166:	f0 e0       	ldi	r31, 0x00	; 0
 168:	80 81       	ld	r24, Z
 16a:	48 2f       	mov	r20, r24
 16c:	8b 81       	ldd	r24, Y+3	; 0x03
 16e:	28 2f       	mov	r18, r24
 170:	30 e0       	ldi	r19, 0x00	; 0
 172:	81 e0       	ldi	r24, 0x01	; 1
 174:	90 e0       	ldi	r25, 0x00	; 0
 176:	02 2e       	mov	r0, r18
 178:	02 c0       	rjmp	.+4      	; 0x17e <DIO_SetPinDirection+0x112>
 17a:	88 0f       	add	r24, r24
 17c:	99 1f       	adc	r25, r25
 17e:	0a 94       	dec	r0
 180:	e2 f7       	brpl	.-8      	; 0x17a <DIO_SetPinDirection+0x10e>
 182:	84 2b       	or	r24, r20
 184:	8c 93       	st	X, r24
 186:	61 c0       	rjmp	.+194    	; 0x24a <DIO_SetPinDirection+0x1de>
					else
					{
						//do noting
					}
					break;
		case PORTC: if (au8_DIRECTION==INPUT)
 188:	8c 81       	ldd	r24, Y+4	; 0x04
 18a:	88 23       	and	r24, r24
 18c:	a9 f4       	brne	.+42     	; 0x1b8 <DIO_SetPinDirection+0x14c>
					{
						CLR_BIT(DDRC_REG,au8_PIN);
 18e:	a4 e3       	ldi	r26, 0x34	; 52
 190:	b0 e0       	ldi	r27, 0x00	; 0
 192:	e4 e3       	ldi	r30, 0x34	; 52
 194:	f0 e0       	ldi	r31, 0x00	; 0
 196:	80 81       	ld	r24, Z
 198:	48 2f       	mov	r20, r24
 19a:	8b 81       	ldd	r24, Y+3	; 0x03
 19c:	28 2f       	mov	r18, r24
 19e:	30 e0       	ldi	r19, 0x00	; 0
 1a0:	81 e0       	ldi	r24, 0x01	; 1
 1a2:	90 e0       	ldi	r25, 0x00	; 0
 1a4:	02 2e       	mov	r0, r18
 1a6:	02 c0       	rjmp	.+4      	; 0x1ac <DIO_SetPinDirection+0x140>
 1a8:	88 0f       	add	r24, r24
 1aa:	99 1f       	adc	r25, r25
 1ac:	0a 94       	dec	r0
 1ae:	e2 f7       	brpl	.-8      	; 0x1a8 <DIO_SetPinDirection+0x13c>
 1b0:	80 95       	com	r24
 1b2:	84 23       	and	r24, r20
 1b4:	8c 93       	st	X, r24
 1b6:	49 c0       	rjmp	.+146    	; 0x24a <DIO_SetPinDirection+0x1de>
					}
					else if(au8_DIRECTION==OUTPUT)
 1b8:	8c 81       	ldd	r24, Y+4	; 0x04
 1ba:	81 30       	cpi	r24, 0x01	; 1
 1bc:	09 f0       	breq	.+2      	; 0x1c0 <DIO_SetPinDirection+0x154>
 1be:	45 c0       	rjmp	.+138    	; 0x24a <DIO_SetPinDirection+0x1de>
					{
						SET_BIT(DDRC_REG,au8_PIN);
 1c0:	a4 e3       	ldi	r26, 0x34	; 52
 1c2:	b0 e0       	ldi	r27, 0x00	; 0
 1c4:	e4 e3       	ldi	r30, 0x34	; 52
 1c6:	f0 e0       	ldi	r31, 0x00	; 0
 1c8:	80 81       	ld	r24, Z
 1ca:	48 2f       	mov	r20, r24
 1cc:	8b 81       	ldd	r24, Y+3	; 0x03
 1ce:	28 2f       	mov	r18, r24
 1d0:	30 e0       	ldi	r19, 0x00	; 0
 1d2:	81 e0       	ldi	r24, 0x01	; 1
 1d4:	90 e0       	ldi	r25, 0x00	; 0
 1d6:	02 2e       	mov	r0, r18
 1d8:	02 c0       	rjmp	.+4      	; 0x1de <DIO_SetPinDirection+0x172>
 1da:	88 0f       	add	r24, r24
 1dc:	99 1f       	adc	r25, r25
 1de:	0a 94       	dec	r0
 1e0:	e2 f7       	brpl	.-8      	; 0x1da <DIO_SetPinDirection+0x16e>
 1e2:	84 2b       	or	r24, r20
 1e4:	8c 93       	st	X, r24
 1e6:	31 c0       	rjmp	.+98     	; 0x24a <DIO_SetPinDirection+0x1de>
					else
					{
						//do noting
					}
					break;
		case PORTD: if (au8_DIRECTION==INPUT)
 1e8:	8c 81       	ldd	r24, Y+4	; 0x04
 1ea:	88 23       	and	r24, r24
 1ec:	a9 f4       	brne	.+42     	; 0x218 <DIO_SetPinDirection+0x1ac>
					{
						CLR_BIT(DDRD_REG,au8_PIN);
 1ee:	a1 e3       	ldi	r26, 0x31	; 49
 1f0:	b0 e0       	ldi	r27, 0x00	; 0
 1f2:	e1 e3       	ldi	r30, 0x31	; 49
 1f4:	f0 e0       	ldi	r31, 0x00	; 0
 1f6:	80 81       	ld	r24, Z
 1f8:	48 2f       	mov	r20, r24
 1fa:	8b 81       	ldd	r24, Y+3	; 0x03
 1fc:	28 2f       	mov	r18, r24
 1fe:	30 e0       	ldi	r19, 0x00	; 0
 200:	81 e0       	ldi	r24, 0x01	; 1
 202:	90 e0       	ldi	r25, 0x00	; 0
 204:	02 2e       	mov	r0, r18
 206:	02 c0       	rjmp	.+4      	; 0x20c <DIO_SetPinDirection+0x1a0>
 208:	88 0f       	add	r24, r24
 20a:	99 1f       	adc	r25, r25
 20c:	0a 94       	dec	r0
 20e:	e2 f7       	brpl	.-8      	; 0x208 <DIO_SetPinDirection+0x19c>
 210:	80 95       	com	r24
 212:	84 23       	and	r24, r20
 214:	8c 93       	st	X, r24
 216:	19 c0       	rjmp	.+50     	; 0x24a <DIO_SetPinDirection+0x1de>
					}
					else if(au8_DIRECTION==OUTPUT)
 218:	8c 81       	ldd	r24, Y+4	; 0x04
 21a:	81 30       	cpi	r24, 0x01	; 1
 21c:	b1 f4       	brne	.+44     	; 0x24a <DIO_SetPinDirection+0x1de>
					{
						SET_BIT(DDRD_REG,au8_PIN);
 21e:	a1 e3       	ldi	r26, 0x31	; 49
 220:	b0 e0       	ldi	r27, 0x00	; 0
 222:	e1 e3       	ldi	r30, 0x31	; 49
 224:	f0 e0       	ldi	r31, 0x00	; 0
 226:	80 81       	ld	r24, Z
 228:	48 2f       	mov	r20, r24
 22a:	8b 81       	ldd	r24, Y+3	; 0x03
 22c:	28 2f       	mov	r18, r24
 22e:	30 e0       	ldi	r19, 0x00	; 0
 230:	81 e0       	ldi	r24, 0x01	; 1
 232:	90 e0       	ldi	r25, 0x00	; 0
 234:	02 2e       	mov	r0, r18
 236:	02 c0       	rjmp	.+4      	; 0x23c <DIO_SetPinDirection+0x1d0>
 238:	88 0f       	add	r24, r24
 23a:	99 1f       	adc	r25, r25
 23c:	0a 94       	dec	r0
 23e:	e2 f7       	brpl	.-8      	; 0x238 <DIO_SetPinDirection+0x1cc>
 240:	84 2b       	or	r24, r20
 242:	8c 93       	st	X, r24
 244:	02 c0       	rjmp	.+4      	; 0x24a <DIO_SetPinDirection+0x1de>
					else
					{
						//do noting
					}
					break;
		default:au8_errorstate = DIO_CHOISE_NOT_FOUND;//error
 246:	85 e0       	ldi	r24, 0x05	; 5
 248:	89 83       	std	Y+1, r24	; 0x01
			break;
	}//switch
	return au8_errorstate;
 24a:	89 81       	ldd	r24, Y+1	; 0x01
}//function
 24c:	26 96       	adiw	r28, 0x06	; 6
 24e:	0f b6       	in	r0, 0x3f	; 63
 250:	f8 94       	cli
 252:	de bf       	out	0x3e, r29	; 62
 254:	0f be       	out	0x3f, r0	; 63
 256:	cd bf       	out	0x3d, r28	; 61
 258:	cf 91       	pop	r28
 25a:	df 91       	pop	r29
 25c:	08 95       	ret

0000025e <DIO_SetPinValue>:
uint8_t DIO_SetPinValue(uint8_t au8_PORT , uint8_t au8_PIN , uint8_t au8_VALUE)
{
 25e:	df 93       	push	r29
 260:	cf 93       	push	r28
 262:	00 d0       	rcall	.+0      	; 0x264 <DIO_SetPinValue+0x6>
 264:	00 d0       	rcall	.+0      	; 0x266 <DIO_SetPinValue+0x8>
 266:	00 d0       	rcall	.+0      	; 0x268 <DIO_SetPinValue+0xa>
 268:	cd b7       	in	r28, 0x3d	; 61
 26a:	de b7       	in	r29, 0x3e	; 62
 26c:	8a 83       	std	Y+2, r24	; 0x02
 26e:	6b 83       	std	Y+3, r22	; 0x03
 270:	4c 83       	std	Y+4, r20	; 0x04
	uint8_t au8_errorstate = DIO_SUCCESS ;
 272:	84 e0       	ldi	r24, 0x04	; 4
 274:	89 83       	std	Y+1, r24	; 0x01
	switch (au8_PORT)
 276:	8a 81       	ldd	r24, Y+2	; 0x02
 278:	28 2f       	mov	r18, r24
 27a:	30 e0       	ldi	r19, 0x00	; 0
 27c:	3e 83       	std	Y+6, r19	; 0x06
 27e:	2d 83       	std	Y+5, r18	; 0x05
 280:	8d 81       	ldd	r24, Y+5	; 0x05
 282:	9e 81       	ldd	r25, Y+6	; 0x06
 284:	81 30       	cpi	r24, 0x01	; 1
 286:	91 05       	cpc	r25, r1
 288:	09 f4       	brne	.+2      	; 0x28c <DIO_SetPinValue+0x2e>
 28a:	47 c0       	rjmp	.+142    	; 0x31a <DIO_SetPinValue+0xbc>
 28c:	2d 81       	ldd	r18, Y+5	; 0x05
 28e:	3e 81       	ldd	r19, Y+6	; 0x06
 290:	22 30       	cpi	r18, 0x02	; 2
 292:	31 05       	cpc	r19, r1
 294:	2c f4       	brge	.+10     	; 0x2a0 <DIO_SetPinValue+0x42>
 296:	8d 81       	ldd	r24, Y+5	; 0x05
 298:	9e 81       	ldd	r25, Y+6	; 0x06
 29a:	00 97       	sbiw	r24, 0x00	; 0
 29c:	71 f0       	breq	.+28     	; 0x2ba <DIO_SetPinValue+0x5c>
 29e:	cc c0       	rjmp	.+408    	; 0x438 <DIO_SetPinValue+0x1da>
 2a0:	2d 81       	ldd	r18, Y+5	; 0x05
 2a2:	3e 81       	ldd	r19, Y+6	; 0x06
 2a4:	22 30       	cpi	r18, 0x02	; 2
 2a6:	31 05       	cpc	r19, r1
 2a8:	09 f4       	brne	.+2      	; 0x2ac <DIO_SetPinValue+0x4e>
 2aa:	67 c0       	rjmp	.+206    	; 0x37a <DIO_SetPinValue+0x11c>
 2ac:	8d 81       	ldd	r24, Y+5	; 0x05
 2ae:	9e 81       	ldd	r25, Y+6	; 0x06
 2b0:	83 30       	cpi	r24, 0x03	; 3
 2b2:	91 05       	cpc	r25, r1
 2b4:	09 f4       	brne	.+2      	; 0x2b8 <DIO_SetPinValue+0x5a>
 2b6:	91 c0       	rjmp	.+290    	; 0x3da <DIO_SetPinValue+0x17c>
 2b8:	bf c0       	rjmp	.+382    	; 0x438 <DIO_SetPinValue+0x1da>
		{
			case PORTA: if (au8_VALUE==LOW)
 2ba:	8c 81       	ldd	r24, Y+4	; 0x04
 2bc:	88 23       	and	r24, r24
 2be:	a9 f4       	brne	.+42     	; 0x2ea <DIO_SetPinValue+0x8c>
						{
							CLR_BIT(PORTA_REG,au8_PIN);
 2c0:	ab e3       	ldi	r26, 0x3B	; 59
 2c2:	b0 e0       	ldi	r27, 0x00	; 0
 2c4:	eb e3       	ldi	r30, 0x3B	; 59
 2c6:	f0 e0       	ldi	r31, 0x00	; 0
 2c8:	80 81       	ld	r24, Z
 2ca:	48 2f       	mov	r20, r24
 2cc:	8b 81       	ldd	r24, Y+3	; 0x03
 2ce:	28 2f       	mov	r18, r24
 2d0:	30 e0       	ldi	r19, 0x00	; 0
 2d2:	81 e0       	ldi	r24, 0x01	; 1
 2d4:	90 e0       	ldi	r25, 0x00	; 0
 2d6:	02 2e       	mov	r0, r18
 2d8:	02 c0       	rjmp	.+4      	; 0x2de <DIO_SetPinValue+0x80>
 2da:	88 0f       	add	r24, r24
 2dc:	99 1f       	adc	r25, r25
 2de:	0a 94       	dec	r0
 2e0:	e2 f7       	brpl	.-8      	; 0x2da <DIO_SetPinValue+0x7c>
 2e2:	80 95       	com	r24
 2e4:	84 23       	and	r24, r20
 2e6:	8c 93       	st	X, r24
 2e8:	a9 c0       	rjmp	.+338    	; 0x43c <DIO_SetPinValue+0x1de>
						}
						else if(au8_VALUE==HIGH)
 2ea:	8c 81       	ldd	r24, Y+4	; 0x04
 2ec:	81 30       	cpi	r24, 0x01	; 1
 2ee:	09 f0       	breq	.+2      	; 0x2f2 <DIO_SetPinValue+0x94>
 2f0:	a5 c0       	rjmp	.+330    	; 0x43c <DIO_SetPinValue+0x1de>
						{
							SET_BIT(PORTA_REG,au8_PIN);
 2f2:	ab e3       	ldi	r26, 0x3B	; 59
 2f4:	b0 e0       	ldi	r27, 0x00	; 0
 2f6:	eb e3       	ldi	r30, 0x3B	; 59
 2f8:	f0 e0       	ldi	r31, 0x00	; 0
 2fa:	80 81       	ld	r24, Z
 2fc:	48 2f       	mov	r20, r24
 2fe:	8b 81       	ldd	r24, Y+3	; 0x03
 300:	28 2f       	mov	r18, r24
 302:	30 e0       	ldi	r19, 0x00	; 0
 304:	81 e0       	ldi	r24, 0x01	; 1
 306:	90 e0       	ldi	r25, 0x00	; 0
 308:	02 2e       	mov	r0, r18
 30a:	02 c0       	rjmp	.+4      	; 0x310 <DIO_SetPinValue+0xb2>
 30c:	88 0f       	add	r24, r24
 30e:	99 1f       	adc	r25, r25
 310:	0a 94       	dec	r0
 312:	e2 f7       	brpl	.-8      	; 0x30c <DIO_SetPinValue+0xae>
 314:	84 2b       	or	r24, r20
 316:	8c 93       	st	X, r24
 318:	91 c0       	rjmp	.+290    	; 0x43c <DIO_SetPinValue+0x1de>
						else
						{
							//do noting
						}
						break;
			case PORTB: if (au8_VALUE==LOW)
 31a:	8c 81       	ldd	r24, Y+4	; 0x04
 31c:	88 23       	and	r24, r24
 31e:	a9 f4       	brne	.+42     	; 0x34a <DIO_SetPinValue+0xec>
						{
							CLR_BIT(PORTB_REG,au8_PIN);
 320:	a8 e3       	ldi	r26, 0x38	; 56
 322:	b0 e0       	ldi	r27, 0x00	; 0
 324:	e8 e3       	ldi	r30, 0x38	; 56
 326:	f0 e0       	ldi	r31, 0x00	; 0
 328:	80 81       	ld	r24, Z
 32a:	48 2f       	mov	r20, r24
 32c:	8b 81       	ldd	r24, Y+3	; 0x03
 32e:	28 2f       	mov	r18, r24
 330:	30 e0       	ldi	r19, 0x00	; 0
 332:	81 e0       	ldi	r24, 0x01	; 1
 334:	90 e0       	ldi	r25, 0x00	; 0
 336:	02 2e       	mov	r0, r18
 338:	02 c0       	rjmp	.+4      	; 0x33e <DIO_SetPinValue+0xe0>
 33a:	88 0f       	add	r24, r24
 33c:	99 1f       	adc	r25, r25
 33e:	0a 94       	dec	r0
 340:	e2 f7       	brpl	.-8      	; 0x33a <DIO_SetPinValue+0xdc>
 342:	80 95       	com	r24
 344:	84 23       	and	r24, r20
 346:	8c 93       	st	X, r24
 348:	79 c0       	rjmp	.+242    	; 0x43c <DIO_SetPinValue+0x1de>
						}
						else if(au8_VALUE==HIGH)
 34a:	8c 81       	ldd	r24, Y+4	; 0x04
 34c:	81 30       	cpi	r24, 0x01	; 1
 34e:	09 f0       	breq	.+2      	; 0x352 <DIO_SetPinValue+0xf4>
 350:	75 c0       	rjmp	.+234    	; 0x43c <DIO_SetPinValue+0x1de>
						{
							SET_BIT(PORTB_REG,au8_PIN);
 352:	a8 e3       	ldi	r26, 0x38	; 56
 354:	b0 e0       	ldi	r27, 0x00	; 0
 356:	e8 e3       	ldi	r30, 0x38	; 56
 358:	f0 e0       	ldi	r31, 0x00	; 0
 35a:	80 81       	ld	r24, Z
 35c:	48 2f       	mov	r20, r24
 35e:	8b 81       	ldd	r24, Y+3	; 0x03
 360:	28 2f       	mov	r18, r24
 362:	30 e0       	ldi	r19, 0x00	; 0
 364:	81 e0       	ldi	r24, 0x01	; 1
 366:	90 e0       	ldi	r25, 0x00	; 0
 368:	02 2e       	mov	r0, r18
 36a:	02 c0       	rjmp	.+4      	; 0x370 <DIO_SetPinValue+0x112>
 36c:	88 0f       	add	r24, r24
 36e:	99 1f       	adc	r25, r25
 370:	0a 94       	dec	r0
 372:	e2 f7       	brpl	.-8      	; 0x36c <DIO_SetPinValue+0x10e>
 374:	84 2b       	or	r24, r20
 376:	8c 93       	st	X, r24
 378:	61 c0       	rjmp	.+194    	; 0x43c <DIO_SetPinValue+0x1de>
						else
						{
							//do noting
						}
						break;
			case PORTC: if (au8_VALUE==LOW)
 37a:	8c 81       	ldd	r24, Y+4	; 0x04
 37c:	88 23       	and	r24, r24
 37e:	a9 f4       	brne	.+42     	; 0x3aa <DIO_SetPinValue+0x14c>
						{
							CLR_BIT(PORTC_REG,au8_PIN);
 380:	a5 e3       	ldi	r26, 0x35	; 53
 382:	b0 e0       	ldi	r27, 0x00	; 0
 384:	e5 e3       	ldi	r30, 0x35	; 53
 386:	f0 e0       	ldi	r31, 0x00	; 0
 388:	80 81       	ld	r24, Z
 38a:	48 2f       	mov	r20, r24
 38c:	8b 81       	ldd	r24, Y+3	; 0x03
 38e:	28 2f       	mov	r18, r24
 390:	30 e0       	ldi	r19, 0x00	; 0
 392:	81 e0       	ldi	r24, 0x01	; 1
 394:	90 e0       	ldi	r25, 0x00	; 0
 396:	02 2e       	mov	r0, r18
 398:	02 c0       	rjmp	.+4      	; 0x39e <DIO_SetPinValue+0x140>
 39a:	88 0f       	add	r24, r24
 39c:	99 1f       	adc	r25, r25
 39e:	0a 94       	dec	r0
 3a0:	e2 f7       	brpl	.-8      	; 0x39a <DIO_SetPinValue+0x13c>
 3a2:	80 95       	com	r24
 3a4:	84 23       	and	r24, r20
 3a6:	8c 93       	st	X, r24
 3a8:	49 c0       	rjmp	.+146    	; 0x43c <DIO_SetPinValue+0x1de>
						}
						else if(au8_VALUE==HIGH)
 3aa:	8c 81       	ldd	r24, Y+4	; 0x04
 3ac:	81 30       	cpi	r24, 0x01	; 1
 3ae:	09 f0       	breq	.+2      	; 0x3b2 <DIO_SetPinValue+0x154>
 3b0:	45 c0       	rjmp	.+138    	; 0x43c <DIO_SetPinValue+0x1de>
						{
							SET_BIT(PORTC_REG,au8_PIN);
 3b2:	a5 e3       	ldi	r26, 0x35	; 53
 3b4:	b0 e0       	ldi	r27, 0x00	; 0
 3b6:	e5 e3       	ldi	r30, 0x35	; 53
 3b8:	f0 e0       	ldi	r31, 0x00	; 0
 3ba:	80 81       	ld	r24, Z
 3bc:	48 2f       	mov	r20, r24
 3be:	8b 81       	ldd	r24, Y+3	; 0x03
 3c0:	28 2f       	mov	r18, r24
 3c2:	30 e0       	ldi	r19, 0x00	; 0
 3c4:	81 e0       	ldi	r24, 0x01	; 1
 3c6:	90 e0       	ldi	r25, 0x00	; 0
 3c8:	02 2e       	mov	r0, r18
 3ca:	02 c0       	rjmp	.+4      	; 0x3d0 <DIO_SetPinValue+0x172>
 3cc:	88 0f       	add	r24, r24
 3ce:	99 1f       	adc	r25, r25
 3d0:	0a 94       	dec	r0
 3d2:	e2 f7       	brpl	.-8      	; 0x3cc <DIO_SetPinValue+0x16e>
 3d4:	84 2b       	or	r24, r20
 3d6:	8c 93       	st	X, r24
 3d8:	31 c0       	rjmp	.+98     	; 0x43c <DIO_SetPinValue+0x1de>
						else
						{
							//do noting
						}
						break;
			case PORTD: if (au8_VALUE==LOW)
 3da:	8c 81       	ldd	r24, Y+4	; 0x04
 3dc:	88 23       	and	r24, r24
 3de:	a9 f4       	brne	.+42     	; 0x40a <DIO_SetPinValue+0x1ac>
						{
							CLR_BIT(PORTD_REG,au8_PIN);
 3e0:	a2 e3       	ldi	r26, 0x32	; 50
 3e2:	b0 e0       	ldi	r27, 0x00	; 0
 3e4:	e2 e3       	ldi	r30, 0x32	; 50
 3e6:	f0 e0       	ldi	r31, 0x00	; 0
 3e8:	80 81       	ld	r24, Z
 3ea:	48 2f       	mov	r20, r24
 3ec:	8b 81       	ldd	r24, Y+3	; 0x03
 3ee:	28 2f       	mov	r18, r24
 3f0:	30 e0       	ldi	r19, 0x00	; 0
 3f2:	81 e0       	ldi	r24, 0x01	; 1
 3f4:	90 e0       	ldi	r25, 0x00	; 0
 3f6:	02 2e       	mov	r0, r18
 3f8:	02 c0       	rjmp	.+4      	; 0x3fe <DIO_SetPinValue+0x1a0>
 3fa:	88 0f       	add	r24, r24
 3fc:	99 1f       	adc	r25, r25
 3fe:	0a 94       	dec	r0
 400:	e2 f7       	brpl	.-8      	; 0x3fa <DIO_SetPinValue+0x19c>
 402:	80 95       	com	r24
 404:	84 23       	and	r24, r20
 406:	8c 93       	st	X, r24
 408:	19 c0       	rjmp	.+50     	; 0x43c <DIO_SetPinValue+0x1de>
						}
						else if(au8_VALUE==HIGH)
 40a:	8c 81       	ldd	r24, Y+4	; 0x04
 40c:	81 30       	cpi	r24, 0x01	; 1
 40e:	b1 f4       	brne	.+44     	; 0x43c <DIO_SetPinValue+0x1de>
						{
							SET_BIT(PORTD_REG,au8_PIN);
 410:	a2 e3       	ldi	r26, 0x32	; 50
 412:	b0 e0       	ldi	r27, 0x00	; 0
 414:	e2 e3       	ldi	r30, 0x32	; 50
 416:	f0 e0       	ldi	r31, 0x00	; 0
 418:	80 81       	ld	r24, Z
 41a:	48 2f       	mov	r20, r24
 41c:	8b 81       	ldd	r24, Y+3	; 0x03
 41e:	28 2f       	mov	r18, r24
 420:	30 e0       	ldi	r19, 0x00	; 0
 422:	81 e0       	ldi	r24, 0x01	; 1
 424:	90 e0       	ldi	r25, 0x00	; 0
 426:	02 2e       	mov	r0, r18
 428:	02 c0       	rjmp	.+4      	; 0x42e <DIO_SetPinValue+0x1d0>
 42a:	88 0f       	add	r24, r24
 42c:	99 1f       	adc	r25, r25
 42e:	0a 94       	dec	r0
 430:	e2 f7       	brpl	.-8      	; 0x42a <DIO_SetPinValue+0x1cc>
 432:	84 2b       	or	r24, r20
 434:	8c 93       	st	X, r24
 436:	02 c0       	rjmp	.+4      	; 0x43c <DIO_SetPinValue+0x1de>
						else
						{
							//do noting
						}
						break;
			default:au8_errorstate = DIO_CHOISE_NOT_FOUND;//error
 438:	85 e0       	ldi	r24, 0x05	; 5
 43a:	89 83       	std	Y+1, r24	; 0x01
				break;
		}//switch
	return au8_errorstate;
 43c:	89 81       	ldd	r24, Y+1	; 0x01
}//function
 43e:	26 96       	adiw	r28, 0x06	; 6
 440:	0f b6       	in	r0, 0x3f	; 63
 442:	f8 94       	cli
 444:	de bf       	out	0x3e, r29	; 62
 446:	0f be       	out	0x3f, r0	; 63
 448:	cd bf       	out	0x3d, r28	; 61
 44a:	cf 91       	pop	r28
 44c:	df 91       	pop	r29
 44e:	08 95       	ret

00000450 <DIO_TogPinValue>:
uint8_t DIO_TogPinValue(uint8_t au8_PORT , uint8_t PIN)
{
 450:	df 93       	push	r29
 452:	cf 93       	push	r28
 454:	00 d0       	rcall	.+0      	; 0x456 <DIO_TogPinValue+0x6>
 456:	00 d0       	rcall	.+0      	; 0x458 <DIO_TogPinValue+0x8>
 458:	0f 92       	push	r0
 45a:	cd b7       	in	r28, 0x3d	; 61
 45c:	de b7       	in	r29, 0x3e	; 62
 45e:	8a 83       	std	Y+2, r24	; 0x02
 460:	6b 83       	std	Y+3, r22	; 0x03
	uint8_t au8_errorstate = DIO_SUCCESS ;
 462:	84 e0       	ldi	r24, 0x04	; 4
 464:	89 83       	std	Y+1, r24	; 0x01
	switch(au8_PORT)
 466:	8a 81       	ldd	r24, Y+2	; 0x02
 468:	28 2f       	mov	r18, r24
 46a:	30 e0       	ldi	r19, 0x00	; 0
 46c:	3d 83       	std	Y+5, r19	; 0x05
 46e:	2c 83       	std	Y+4, r18	; 0x04
 470:	8c 81       	ldd	r24, Y+4	; 0x04
 472:	9d 81       	ldd	r25, Y+5	; 0x05
 474:	81 30       	cpi	r24, 0x01	; 1
 476:	91 05       	cpc	r25, r1
 478:	49 f1       	breq	.+82     	; 0x4cc <DIO_TogPinValue+0x7c>
 47a:	2c 81       	ldd	r18, Y+4	; 0x04
 47c:	3d 81       	ldd	r19, Y+5	; 0x05
 47e:	22 30       	cpi	r18, 0x02	; 2
 480:	31 05       	cpc	r19, r1
 482:	2c f4       	brge	.+10     	; 0x48e <DIO_TogPinValue+0x3e>
 484:	8c 81       	ldd	r24, Y+4	; 0x04
 486:	9d 81       	ldd	r25, Y+5	; 0x05
 488:	00 97       	sbiw	r24, 0x00	; 0
 48a:	61 f0       	breq	.+24     	; 0x4a4 <DIO_TogPinValue+0x54>
 48c:	5b c0       	rjmp	.+182    	; 0x544 <DIO_TogPinValue+0xf4>
 48e:	2c 81       	ldd	r18, Y+4	; 0x04
 490:	3d 81       	ldd	r19, Y+5	; 0x05
 492:	22 30       	cpi	r18, 0x02	; 2
 494:	31 05       	cpc	r19, r1
 496:	71 f1       	breq	.+92     	; 0x4f4 <DIO_TogPinValue+0xa4>
 498:	8c 81       	ldd	r24, Y+4	; 0x04
 49a:	9d 81       	ldd	r25, Y+5	; 0x05
 49c:	83 30       	cpi	r24, 0x03	; 3
 49e:	91 05       	cpc	r25, r1
 4a0:	e9 f1       	breq	.+122    	; 0x51c <DIO_TogPinValue+0xcc>
 4a2:	50 c0       	rjmp	.+160    	; 0x544 <DIO_TogPinValue+0xf4>
	{
		case PORTA: TOG_BIT(PORTA_REG,PIN);break;
 4a4:	ab e3       	ldi	r26, 0x3B	; 59
 4a6:	b0 e0       	ldi	r27, 0x00	; 0
 4a8:	eb e3       	ldi	r30, 0x3B	; 59
 4aa:	f0 e0       	ldi	r31, 0x00	; 0
 4ac:	80 81       	ld	r24, Z
 4ae:	48 2f       	mov	r20, r24
 4b0:	8b 81       	ldd	r24, Y+3	; 0x03
 4b2:	28 2f       	mov	r18, r24
 4b4:	30 e0       	ldi	r19, 0x00	; 0
 4b6:	81 e0       	ldi	r24, 0x01	; 1
 4b8:	90 e0       	ldi	r25, 0x00	; 0
 4ba:	02 2e       	mov	r0, r18
 4bc:	02 c0       	rjmp	.+4      	; 0x4c2 <DIO_TogPinValue+0x72>
 4be:	88 0f       	add	r24, r24
 4c0:	99 1f       	adc	r25, r25
 4c2:	0a 94       	dec	r0
 4c4:	e2 f7       	brpl	.-8      	; 0x4be <DIO_TogPinValue+0x6e>
 4c6:	84 27       	eor	r24, r20
 4c8:	8c 93       	st	X, r24
 4ca:	3e c0       	rjmp	.+124    	; 0x548 <DIO_TogPinValue+0xf8>
		case PORTB: TOG_BIT(PORTB_REG,PIN);break;
 4cc:	a8 e3       	ldi	r26, 0x38	; 56
 4ce:	b0 e0       	ldi	r27, 0x00	; 0
 4d0:	e8 e3       	ldi	r30, 0x38	; 56
 4d2:	f0 e0       	ldi	r31, 0x00	; 0
 4d4:	80 81       	ld	r24, Z
 4d6:	48 2f       	mov	r20, r24
 4d8:	8b 81       	ldd	r24, Y+3	; 0x03
 4da:	28 2f       	mov	r18, r24
 4dc:	30 e0       	ldi	r19, 0x00	; 0
 4de:	81 e0       	ldi	r24, 0x01	; 1
 4e0:	90 e0       	ldi	r25, 0x00	; 0
 4e2:	02 2e       	mov	r0, r18
 4e4:	02 c0       	rjmp	.+4      	; 0x4ea <DIO_TogPinValue+0x9a>
 4e6:	88 0f       	add	r24, r24
 4e8:	99 1f       	adc	r25, r25
 4ea:	0a 94       	dec	r0
 4ec:	e2 f7       	brpl	.-8      	; 0x4e6 <DIO_TogPinValue+0x96>
 4ee:	84 27       	eor	r24, r20
 4f0:	8c 93       	st	X, r24
 4f2:	2a c0       	rjmp	.+84     	; 0x548 <DIO_TogPinValue+0xf8>
		case PORTC: TOG_BIT(PORTC_REG,PIN);break;
 4f4:	a5 e3       	ldi	r26, 0x35	; 53
 4f6:	b0 e0       	ldi	r27, 0x00	; 0
 4f8:	e5 e3       	ldi	r30, 0x35	; 53
 4fa:	f0 e0       	ldi	r31, 0x00	; 0
 4fc:	80 81       	ld	r24, Z
 4fe:	48 2f       	mov	r20, r24
 500:	8b 81       	ldd	r24, Y+3	; 0x03
 502:	28 2f       	mov	r18, r24
 504:	30 e0       	ldi	r19, 0x00	; 0
 506:	81 e0       	ldi	r24, 0x01	; 1
 508:	90 e0       	ldi	r25, 0x00	; 0
 50a:	02 2e       	mov	r0, r18
 50c:	02 c0       	rjmp	.+4      	; 0x512 <DIO_TogPinValue+0xc2>
 50e:	88 0f       	add	r24, r24
 510:	99 1f       	adc	r25, r25
 512:	0a 94       	dec	r0
 514:	e2 f7       	brpl	.-8      	; 0x50e <DIO_TogPinValue+0xbe>
 516:	84 27       	eor	r24, r20
 518:	8c 93       	st	X, r24
 51a:	16 c0       	rjmp	.+44     	; 0x548 <DIO_TogPinValue+0xf8>
		case PORTD: TOG_BIT(PORTD_REG,PIN);break;
 51c:	a2 e3       	ldi	r26, 0x32	; 50
 51e:	b0 e0       	ldi	r27, 0x00	; 0
 520:	e2 e3       	ldi	r30, 0x32	; 50
 522:	f0 e0       	ldi	r31, 0x00	; 0
 524:	80 81       	ld	r24, Z
 526:	48 2f       	mov	r20, r24
 528:	8b 81       	ldd	r24, Y+3	; 0x03
 52a:	28 2f       	mov	r18, r24
 52c:	30 e0       	ldi	r19, 0x00	; 0
 52e:	81 e0       	ldi	r24, 0x01	; 1
 530:	90 e0       	ldi	r25, 0x00	; 0
 532:	02 2e       	mov	r0, r18
 534:	02 c0       	rjmp	.+4      	; 0x53a <DIO_TogPinValue+0xea>
 536:	88 0f       	add	r24, r24
 538:	99 1f       	adc	r25, r25
 53a:	0a 94       	dec	r0
 53c:	e2 f7       	brpl	.-8      	; 0x536 <DIO_TogPinValue+0xe6>
 53e:	84 27       	eor	r24, r20
 540:	8c 93       	st	X, r24
 542:	02 c0       	rjmp	.+4      	; 0x548 <DIO_TogPinValue+0xf8>
		default:au8_errorstate = DIO_CHOISE_NOT_FOUND;//error
 544:	85 e0       	ldi	r24, 0x05	; 5
 546:	89 83       	std	Y+1, r24	; 0x01
			break;
	}//switch
	return au8_errorstate;
 548:	89 81       	ldd	r24, Y+1	; 0x01
}//function
 54a:	0f 90       	pop	r0
 54c:	0f 90       	pop	r0
 54e:	0f 90       	pop	r0
 550:	0f 90       	pop	r0
 552:	0f 90       	pop	r0
 554:	cf 91       	pop	r28
 556:	df 91       	pop	r29
 558:	08 95       	ret

0000055a <DIO_TogPinDirection>:
uint8_t DIO_TogPinDirection(uint8_t au8_PORT , uint8_t PIN)
{
 55a:	df 93       	push	r29
 55c:	cf 93       	push	r28
 55e:	00 d0       	rcall	.+0      	; 0x560 <DIO_TogPinDirection+0x6>
 560:	00 d0       	rcall	.+0      	; 0x562 <DIO_TogPinDirection+0x8>
 562:	0f 92       	push	r0
 564:	cd b7       	in	r28, 0x3d	; 61
 566:	de b7       	in	r29, 0x3e	; 62
 568:	8a 83       	std	Y+2, r24	; 0x02
 56a:	6b 83       	std	Y+3, r22	; 0x03
	uint8_t au8_errorstate = DIO_SUCCESS ;
 56c:	84 e0       	ldi	r24, 0x04	; 4
 56e:	89 83       	std	Y+1, r24	; 0x01
	switch(au8_PORT)
 570:	8a 81       	ldd	r24, Y+2	; 0x02
 572:	28 2f       	mov	r18, r24
 574:	30 e0       	ldi	r19, 0x00	; 0
 576:	3d 83       	std	Y+5, r19	; 0x05
 578:	2c 83       	std	Y+4, r18	; 0x04
 57a:	8c 81       	ldd	r24, Y+4	; 0x04
 57c:	9d 81       	ldd	r25, Y+5	; 0x05
 57e:	81 30       	cpi	r24, 0x01	; 1
 580:	91 05       	cpc	r25, r1
 582:	49 f1       	breq	.+82     	; 0x5d6 <DIO_TogPinDirection+0x7c>
 584:	2c 81       	ldd	r18, Y+4	; 0x04
 586:	3d 81       	ldd	r19, Y+5	; 0x05
 588:	22 30       	cpi	r18, 0x02	; 2
 58a:	31 05       	cpc	r19, r1
 58c:	2c f4       	brge	.+10     	; 0x598 <DIO_TogPinDirection+0x3e>
 58e:	8c 81       	ldd	r24, Y+4	; 0x04
 590:	9d 81       	ldd	r25, Y+5	; 0x05
 592:	00 97       	sbiw	r24, 0x00	; 0
 594:	61 f0       	breq	.+24     	; 0x5ae <DIO_TogPinDirection+0x54>
 596:	5b c0       	rjmp	.+182    	; 0x64e <DIO_TogPinDirection+0xf4>
 598:	2c 81       	ldd	r18, Y+4	; 0x04
 59a:	3d 81       	ldd	r19, Y+5	; 0x05
 59c:	22 30       	cpi	r18, 0x02	; 2
 59e:	31 05       	cpc	r19, r1
 5a0:	71 f1       	breq	.+92     	; 0x5fe <DIO_TogPinDirection+0xa4>
 5a2:	8c 81       	ldd	r24, Y+4	; 0x04
 5a4:	9d 81       	ldd	r25, Y+5	; 0x05
 5a6:	83 30       	cpi	r24, 0x03	; 3
 5a8:	91 05       	cpc	r25, r1
 5aa:	e9 f1       	breq	.+122    	; 0x626 <DIO_TogPinDirection+0xcc>
 5ac:	50 c0       	rjmp	.+160    	; 0x64e <DIO_TogPinDirection+0xf4>
	{
		case PORTA: TOG_BIT(DDRA_REG,PIN);break;
 5ae:	aa e3       	ldi	r26, 0x3A	; 58
 5b0:	b0 e0       	ldi	r27, 0x00	; 0
 5b2:	ea e3       	ldi	r30, 0x3A	; 58
 5b4:	f0 e0       	ldi	r31, 0x00	; 0
 5b6:	80 81       	ld	r24, Z
 5b8:	48 2f       	mov	r20, r24
 5ba:	8b 81       	ldd	r24, Y+3	; 0x03
 5bc:	28 2f       	mov	r18, r24
 5be:	30 e0       	ldi	r19, 0x00	; 0
 5c0:	81 e0       	ldi	r24, 0x01	; 1
 5c2:	90 e0       	ldi	r25, 0x00	; 0
 5c4:	02 2e       	mov	r0, r18
 5c6:	02 c0       	rjmp	.+4      	; 0x5cc <DIO_TogPinDirection+0x72>
 5c8:	88 0f       	add	r24, r24
 5ca:	99 1f       	adc	r25, r25
 5cc:	0a 94       	dec	r0
 5ce:	e2 f7       	brpl	.-8      	; 0x5c8 <DIO_TogPinDirection+0x6e>
 5d0:	84 27       	eor	r24, r20
 5d2:	8c 93       	st	X, r24
 5d4:	3e c0       	rjmp	.+124    	; 0x652 <DIO_TogPinDirection+0xf8>
		case PORTB: TOG_BIT(DDRB_REG,PIN);break;
 5d6:	a7 e3       	ldi	r26, 0x37	; 55
 5d8:	b0 e0       	ldi	r27, 0x00	; 0
 5da:	e7 e3       	ldi	r30, 0x37	; 55
 5dc:	f0 e0       	ldi	r31, 0x00	; 0
 5de:	80 81       	ld	r24, Z
 5e0:	48 2f       	mov	r20, r24
 5e2:	8b 81       	ldd	r24, Y+3	; 0x03
 5e4:	28 2f       	mov	r18, r24
 5e6:	30 e0       	ldi	r19, 0x00	; 0
 5e8:	81 e0       	ldi	r24, 0x01	; 1
 5ea:	90 e0       	ldi	r25, 0x00	; 0
 5ec:	02 2e       	mov	r0, r18
 5ee:	02 c0       	rjmp	.+4      	; 0x5f4 <DIO_TogPinDirection+0x9a>
 5f0:	88 0f       	add	r24, r24
 5f2:	99 1f       	adc	r25, r25
 5f4:	0a 94       	dec	r0
 5f6:	e2 f7       	brpl	.-8      	; 0x5f0 <DIO_TogPinDirection+0x96>
 5f8:	84 27       	eor	r24, r20
 5fa:	8c 93       	st	X, r24
 5fc:	2a c0       	rjmp	.+84     	; 0x652 <DIO_TogPinDirection+0xf8>
		case PORTC: TOG_BIT(DDRC_REG,PIN);break;
 5fe:	a4 e3       	ldi	r26, 0x34	; 52
 600:	b0 e0       	ldi	r27, 0x00	; 0
 602:	e4 e3       	ldi	r30, 0x34	; 52
 604:	f0 e0       	ldi	r31, 0x00	; 0
 606:	80 81       	ld	r24, Z
 608:	48 2f       	mov	r20, r24
 60a:	8b 81       	ldd	r24, Y+3	; 0x03
 60c:	28 2f       	mov	r18, r24
 60e:	30 e0       	ldi	r19, 0x00	; 0
 610:	81 e0       	ldi	r24, 0x01	; 1
 612:	90 e0       	ldi	r25, 0x00	; 0
 614:	02 2e       	mov	r0, r18
 616:	02 c0       	rjmp	.+4      	; 0x61c <DIO_TogPinDirection+0xc2>
 618:	88 0f       	add	r24, r24
 61a:	99 1f       	adc	r25, r25
 61c:	0a 94       	dec	r0
 61e:	e2 f7       	brpl	.-8      	; 0x618 <DIO_TogPinDirection+0xbe>
 620:	84 27       	eor	r24, r20
 622:	8c 93       	st	X, r24
 624:	16 c0       	rjmp	.+44     	; 0x652 <DIO_TogPinDirection+0xf8>
		case PORTD: TOG_BIT(DDRD_REG,PIN);break;
 626:	a1 e3       	ldi	r26, 0x31	; 49
 628:	b0 e0       	ldi	r27, 0x00	; 0
 62a:	e1 e3       	ldi	r30, 0x31	; 49
 62c:	f0 e0       	ldi	r31, 0x00	; 0
 62e:	80 81       	ld	r24, Z
 630:	48 2f       	mov	r20, r24
 632:	8b 81       	ldd	r24, Y+3	; 0x03
 634:	28 2f       	mov	r18, r24
 636:	30 e0       	ldi	r19, 0x00	; 0
 638:	81 e0       	ldi	r24, 0x01	; 1
 63a:	90 e0       	ldi	r25, 0x00	; 0
 63c:	02 2e       	mov	r0, r18
 63e:	02 c0       	rjmp	.+4      	; 0x644 <DIO_TogPinDirection+0xea>
 640:	88 0f       	add	r24, r24
 642:	99 1f       	adc	r25, r25
 644:	0a 94       	dec	r0
 646:	e2 f7       	brpl	.-8      	; 0x640 <DIO_TogPinDirection+0xe6>
 648:	84 27       	eor	r24, r20
 64a:	8c 93       	st	X, r24
 64c:	02 c0       	rjmp	.+4      	; 0x652 <DIO_TogPinDirection+0xf8>
		default:au8_errorstate = DIO_CHOISE_NOT_FOUND;//error
 64e:	85 e0       	ldi	r24, 0x05	; 5
 650:	89 83       	std	Y+1, r24	; 0x01
			break;
	}//switch
	return au8_errorstate;
 652:	89 81       	ldd	r24, Y+1	; 0x01
}//function
 654:	0f 90       	pop	r0
 656:	0f 90       	pop	r0
 658:	0f 90       	pop	r0
 65a:	0f 90       	pop	r0
 65c:	0f 90       	pop	r0
 65e:	cf 91       	pop	r28
 660:	df 91       	pop	r29
 662:	08 95       	ret

00000664 <DIO_Setau8_PORTDirection>:
uint8_t DIO_Setau8_PORTDirection(uint8_t au8_PORT , uint8_t DIRECTION)
{
 664:	df 93       	push	r29
 666:	cf 93       	push	r28
 668:	00 d0       	rcall	.+0      	; 0x66a <DIO_Setau8_PORTDirection+0x6>
 66a:	00 d0       	rcall	.+0      	; 0x66c <DIO_Setau8_PORTDirection+0x8>
 66c:	0f 92       	push	r0
 66e:	cd b7       	in	r28, 0x3d	; 61
 670:	de b7       	in	r29, 0x3e	; 62
 672:	8a 83       	std	Y+2, r24	; 0x02
 674:	6b 83       	std	Y+3, r22	; 0x03
	uint8_t au8_errorstate = DIO_SUCCESS ;
 676:	84 e0       	ldi	r24, 0x04	; 4
 678:	89 83       	std	Y+1, r24	; 0x01
	switch(au8_PORT)
 67a:	8a 81       	ldd	r24, Y+2	; 0x02
 67c:	28 2f       	mov	r18, r24
 67e:	30 e0       	ldi	r19, 0x00	; 0
 680:	3d 83       	std	Y+5, r19	; 0x05
 682:	2c 83       	std	Y+4, r18	; 0x04
 684:	8c 81       	ldd	r24, Y+4	; 0x04
 686:	9d 81       	ldd	r25, Y+5	; 0x05
 688:	81 30       	cpi	r24, 0x01	; 1
 68a:	91 05       	cpc	r25, r1
 68c:	d1 f0       	breq	.+52     	; 0x6c2 <DIO_Setau8_PORTDirection+0x5e>
 68e:	2c 81       	ldd	r18, Y+4	; 0x04
 690:	3d 81       	ldd	r19, Y+5	; 0x05
 692:	22 30       	cpi	r18, 0x02	; 2
 694:	31 05       	cpc	r19, r1
 696:	2c f4       	brge	.+10     	; 0x6a2 <DIO_Setau8_PORTDirection+0x3e>
 698:	8c 81       	ldd	r24, Y+4	; 0x04
 69a:	9d 81       	ldd	r25, Y+5	; 0x05
 69c:	00 97       	sbiw	r24, 0x00	; 0
 69e:	61 f0       	breq	.+24     	; 0x6b8 <DIO_Setau8_PORTDirection+0x54>
 6a0:	1f c0       	rjmp	.+62     	; 0x6e0 <DIO_Setau8_PORTDirection+0x7c>
 6a2:	2c 81       	ldd	r18, Y+4	; 0x04
 6a4:	3d 81       	ldd	r19, Y+5	; 0x05
 6a6:	22 30       	cpi	r18, 0x02	; 2
 6a8:	31 05       	cpc	r19, r1
 6aa:	81 f0       	breq	.+32     	; 0x6cc <DIO_Setau8_PORTDirection+0x68>
 6ac:	8c 81       	ldd	r24, Y+4	; 0x04
 6ae:	9d 81       	ldd	r25, Y+5	; 0x05
 6b0:	83 30       	cpi	r24, 0x03	; 3
 6b2:	91 05       	cpc	r25, r1
 6b4:	81 f0       	breq	.+32     	; 0x6d6 <DIO_Setau8_PORTDirection+0x72>
 6b6:	14 c0       	rjmp	.+40     	; 0x6e0 <DIO_Setau8_PORTDirection+0x7c>
	{
		case PORTA: DDRA_REG=DIRECTION;break;
 6b8:	ea e3       	ldi	r30, 0x3A	; 58
 6ba:	f0 e0       	ldi	r31, 0x00	; 0
 6bc:	8b 81       	ldd	r24, Y+3	; 0x03
 6be:	80 83       	st	Z, r24
 6c0:	11 c0       	rjmp	.+34     	; 0x6e4 <DIO_Setau8_PORTDirection+0x80>
		case PORTB: DDRB_REG=DIRECTION;break;
 6c2:	e7 e3       	ldi	r30, 0x37	; 55
 6c4:	f0 e0       	ldi	r31, 0x00	; 0
 6c6:	8b 81       	ldd	r24, Y+3	; 0x03
 6c8:	80 83       	st	Z, r24
 6ca:	0c c0       	rjmp	.+24     	; 0x6e4 <DIO_Setau8_PORTDirection+0x80>
		case PORTC: DDRC_REG=DIRECTION;break;
 6cc:	e4 e3       	ldi	r30, 0x34	; 52
 6ce:	f0 e0       	ldi	r31, 0x00	; 0
 6d0:	8b 81       	ldd	r24, Y+3	; 0x03
 6d2:	80 83       	st	Z, r24
 6d4:	07 c0       	rjmp	.+14     	; 0x6e4 <DIO_Setau8_PORTDirection+0x80>
		case PORTD: DDRD_REG=DIRECTION;break;
 6d6:	e1 e3       	ldi	r30, 0x31	; 49
 6d8:	f0 e0       	ldi	r31, 0x00	; 0
 6da:	8b 81       	ldd	r24, Y+3	; 0x03
 6dc:	80 83       	st	Z, r24
 6de:	02 c0       	rjmp	.+4      	; 0x6e4 <DIO_Setau8_PORTDirection+0x80>
		default:au8_errorstate = DIO_CHOISE_NOT_FOUND;//error
 6e0:	85 e0       	ldi	r24, 0x05	; 5
 6e2:	89 83       	std	Y+1, r24	; 0x01
			break;
	}//switch
	return au8_errorstate;
 6e4:	89 81       	ldd	r24, Y+1	; 0x01
}//function
 6e6:	0f 90       	pop	r0
 6e8:	0f 90       	pop	r0
 6ea:	0f 90       	pop	r0
 6ec:	0f 90       	pop	r0
 6ee:	0f 90       	pop	r0
 6f0:	cf 91       	pop	r28
 6f2:	df 91       	pop	r29
 6f4:	08 95       	ret

000006f6 <DIO_Setau8_PORTValue>:
uint8_t DIO_Setau8_PORTValue(uint8_t au8_PORT , uint8_t VALUE)
{
 6f6:	df 93       	push	r29
 6f8:	cf 93       	push	r28
 6fa:	00 d0       	rcall	.+0      	; 0x6fc <DIO_Setau8_PORTValue+0x6>
 6fc:	00 d0       	rcall	.+0      	; 0x6fe <DIO_Setau8_PORTValue+0x8>
 6fe:	0f 92       	push	r0
 700:	cd b7       	in	r28, 0x3d	; 61
 702:	de b7       	in	r29, 0x3e	; 62
 704:	8a 83       	std	Y+2, r24	; 0x02
 706:	6b 83       	std	Y+3, r22	; 0x03
	uint8_t au8_errorstate = DIO_SUCCESS ;
 708:	84 e0       	ldi	r24, 0x04	; 4
 70a:	89 83       	std	Y+1, r24	; 0x01
	switch(au8_PORT)
 70c:	8a 81       	ldd	r24, Y+2	; 0x02
 70e:	28 2f       	mov	r18, r24
 710:	30 e0       	ldi	r19, 0x00	; 0
 712:	3d 83       	std	Y+5, r19	; 0x05
 714:	2c 83       	std	Y+4, r18	; 0x04
 716:	8c 81       	ldd	r24, Y+4	; 0x04
 718:	9d 81       	ldd	r25, Y+5	; 0x05
 71a:	81 30       	cpi	r24, 0x01	; 1
 71c:	91 05       	cpc	r25, r1
 71e:	d1 f0       	breq	.+52     	; 0x754 <DIO_Setau8_PORTValue+0x5e>
 720:	2c 81       	ldd	r18, Y+4	; 0x04
 722:	3d 81       	ldd	r19, Y+5	; 0x05
 724:	22 30       	cpi	r18, 0x02	; 2
 726:	31 05       	cpc	r19, r1
 728:	2c f4       	brge	.+10     	; 0x734 <DIO_Setau8_PORTValue+0x3e>
 72a:	8c 81       	ldd	r24, Y+4	; 0x04
 72c:	9d 81       	ldd	r25, Y+5	; 0x05
 72e:	00 97       	sbiw	r24, 0x00	; 0
 730:	61 f0       	breq	.+24     	; 0x74a <DIO_Setau8_PORTValue+0x54>
 732:	1f c0       	rjmp	.+62     	; 0x772 <DIO_Setau8_PORTValue+0x7c>
 734:	2c 81       	ldd	r18, Y+4	; 0x04
 736:	3d 81       	ldd	r19, Y+5	; 0x05
 738:	22 30       	cpi	r18, 0x02	; 2
 73a:	31 05       	cpc	r19, r1
 73c:	81 f0       	breq	.+32     	; 0x75e <DIO_Setau8_PORTValue+0x68>
 73e:	8c 81       	ldd	r24, Y+4	; 0x04
 740:	9d 81       	ldd	r25, Y+5	; 0x05
 742:	83 30       	cpi	r24, 0x03	; 3
 744:	91 05       	cpc	r25, r1
 746:	81 f0       	breq	.+32     	; 0x768 <DIO_Setau8_PORTValue+0x72>
 748:	14 c0       	rjmp	.+40     	; 0x772 <DIO_Setau8_PORTValue+0x7c>
	{
		case PORTA: PORTA_REG=VALUE;break;
 74a:	eb e3       	ldi	r30, 0x3B	; 59
 74c:	f0 e0       	ldi	r31, 0x00	; 0
 74e:	8b 81       	ldd	r24, Y+3	; 0x03
 750:	80 83       	st	Z, r24
 752:	11 c0       	rjmp	.+34     	; 0x776 <DIO_Setau8_PORTValue+0x80>
		case PORTB: PORTB_REG=VALUE;break;
 754:	e8 e3       	ldi	r30, 0x38	; 56
 756:	f0 e0       	ldi	r31, 0x00	; 0
 758:	8b 81       	ldd	r24, Y+3	; 0x03
 75a:	80 83       	st	Z, r24
 75c:	0c c0       	rjmp	.+24     	; 0x776 <DIO_Setau8_PORTValue+0x80>
		case PORTC: PORTC_REG=VALUE;break;
 75e:	e5 e3       	ldi	r30, 0x35	; 53
 760:	f0 e0       	ldi	r31, 0x00	; 0
 762:	8b 81       	ldd	r24, Y+3	; 0x03
 764:	80 83       	st	Z, r24
 766:	07 c0       	rjmp	.+14     	; 0x776 <DIO_Setau8_PORTValue+0x80>
		case PORTD: PORTD_REG=VALUE;break;
 768:	e2 e3       	ldi	r30, 0x32	; 50
 76a:	f0 e0       	ldi	r31, 0x00	; 0
 76c:	8b 81       	ldd	r24, Y+3	; 0x03
 76e:	80 83       	st	Z, r24
 770:	02 c0       	rjmp	.+4      	; 0x776 <DIO_Setau8_PORTValue+0x80>
		default:au8_errorstate = DIO_CHOISE_NOT_FOUND;//error
 772:	85 e0       	ldi	r24, 0x05	; 5
 774:	89 83       	std	Y+1, r24	; 0x01
			break;
	}//switch
	return au8_errorstate;
 776:	89 81       	ldd	r24, Y+1	; 0x01
}//function
 778:	0f 90       	pop	r0
 77a:	0f 90       	pop	r0
 77c:	0f 90       	pop	r0
 77e:	0f 90       	pop	r0
 780:	0f 90       	pop	r0
 782:	cf 91       	pop	r28
 784:	df 91       	pop	r29
 786:	08 95       	ret

00000788 <DIO_GetPinValue>:
uint8_t DIO_GetPinValue(uint8_t au8_PORT,uint8_t PIN)
{
 788:	df 93       	push	r29
 78a:	cf 93       	push	r28
 78c:	00 d0       	rcall	.+0      	; 0x78e <DIO_GetPinValue+0x6>
 78e:	00 d0       	rcall	.+0      	; 0x790 <DIO_GetPinValue+0x8>
 790:	0f 92       	push	r0
 792:	cd b7       	in	r28, 0x3d	; 61
 794:	de b7       	in	r29, 0x3e	; 62
 796:	8a 83       	std	Y+2, r24	; 0x02
 798:	6b 83       	std	Y+3, r22	; 0x03
	uint8_t PinValue;
	switch(au8_PORT)
 79a:	8a 81       	ldd	r24, Y+2	; 0x02
 79c:	28 2f       	mov	r18, r24
 79e:	30 e0       	ldi	r19, 0x00	; 0
 7a0:	3d 83       	std	Y+5, r19	; 0x05
 7a2:	2c 83       	std	Y+4, r18	; 0x04
 7a4:	4c 81       	ldd	r20, Y+4	; 0x04
 7a6:	5d 81       	ldd	r21, Y+5	; 0x05
 7a8:	41 30       	cpi	r20, 0x01	; 1
 7aa:	51 05       	cpc	r21, r1
 7ac:	41 f1       	breq	.+80     	; 0x7fe <DIO_GetPinValue+0x76>
 7ae:	8c 81       	ldd	r24, Y+4	; 0x04
 7b0:	9d 81       	ldd	r25, Y+5	; 0x05
 7b2:	82 30       	cpi	r24, 0x02	; 2
 7b4:	91 05       	cpc	r25, r1
 7b6:	34 f4       	brge	.+12     	; 0x7c4 <DIO_GetPinValue+0x3c>
 7b8:	2c 81       	ldd	r18, Y+4	; 0x04
 7ba:	3d 81       	ldd	r19, Y+5	; 0x05
 7bc:	21 15       	cp	r18, r1
 7be:	31 05       	cpc	r19, r1
 7c0:	61 f0       	breq	.+24     	; 0x7da <DIO_GetPinValue+0x52>
 7c2:	53 c0       	rjmp	.+166    	; 0x86a <__stack+0xb>
 7c4:	4c 81       	ldd	r20, Y+4	; 0x04
 7c6:	5d 81       	ldd	r21, Y+5	; 0x05
 7c8:	42 30       	cpi	r20, 0x02	; 2
 7ca:	51 05       	cpc	r21, r1
 7cc:	51 f1       	breq	.+84     	; 0x822 <DIO_GetPinValue+0x9a>
 7ce:	8c 81       	ldd	r24, Y+4	; 0x04
 7d0:	9d 81       	ldd	r25, Y+5	; 0x05
 7d2:	83 30       	cpi	r24, 0x03	; 3
 7d4:	91 05       	cpc	r25, r1
 7d6:	b9 f1       	breq	.+110    	; 0x846 <DIO_GetPinValue+0xbe>
 7d8:	48 c0       	rjmp	.+144    	; 0x86a <__stack+0xb>
	{
		case PORTA: PinValue = GET_BIT(PINA_REG,PIN); break;
 7da:	e9 e3       	ldi	r30, 0x39	; 57
 7dc:	f0 e0       	ldi	r31, 0x00	; 0
 7de:	80 81       	ld	r24, Z
 7e0:	28 2f       	mov	r18, r24
 7e2:	30 e0       	ldi	r19, 0x00	; 0
 7e4:	8b 81       	ldd	r24, Y+3	; 0x03
 7e6:	88 2f       	mov	r24, r24
 7e8:	90 e0       	ldi	r25, 0x00	; 0
 7ea:	a9 01       	movw	r20, r18
 7ec:	02 c0       	rjmp	.+4      	; 0x7f2 <DIO_GetPinValue+0x6a>
 7ee:	55 95       	asr	r21
 7f0:	47 95       	ror	r20
 7f2:	8a 95       	dec	r24
 7f4:	e2 f7       	brpl	.-8      	; 0x7ee <DIO_GetPinValue+0x66>
 7f6:	ca 01       	movw	r24, r20
 7f8:	81 70       	andi	r24, 0x01	; 1
 7fa:	89 83       	std	Y+1, r24	; 0x01
 7fc:	38 c0       	rjmp	.+112    	; 0x86e <__stack+0xf>
		case PORTB: PinValue = GET_BIT(PINB_REG,PIN); break;
 7fe:	e6 e3       	ldi	r30, 0x36	; 54
 800:	f0 e0       	ldi	r31, 0x00	; 0
 802:	80 81       	ld	r24, Z
 804:	28 2f       	mov	r18, r24
 806:	30 e0       	ldi	r19, 0x00	; 0
 808:	8b 81       	ldd	r24, Y+3	; 0x03
 80a:	88 2f       	mov	r24, r24
 80c:	90 e0       	ldi	r25, 0x00	; 0
 80e:	a9 01       	movw	r20, r18
 810:	02 c0       	rjmp	.+4      	; 0x816 <DIO_GetPinValue+0x8e>
 812:	55 95       	asr	r21
 814:	47 95       	ror	r20
 816:	8a 95       	dec	r24
 818:	e2 f7       	brpl	.-8      	; 0x812 <DIO_GetPinValue+0x8a>
 81a:	ca 01       	movw	r24, r20
 81c:	81 70       	andi	r24, 0x01	; 1
 81e:	89 83       	std	Y+1, r24	; 0x01
 820:	26 c0       	rjmp	.+76     	; 0x86e <__stack+0xf>
		case PORTC: PinValue = GET_BIT(PINC_REG,PIN); break;
 822:	e3 e3       	ldi	r30, 0x33	; 51
 824:	f0 e0       	ldi	r31, 0x00	; 0
 826:	80 81       	ld	r24, Z
 828:	28 2f       	mov	r18, r24
 82a:	30 e0       	ldi	r19, 0x00	; 0
 82c:	8b 81       	ldd	r24, Y+3	; 0x03
 82e:	88 2f       	mov	r24, r24
 830:	90 e0       	ldi	r25, 0x00	; 0
 832:	a9 01       	movw	r20, r18
 834:	02 c0       	rjmp	.+4      	; 0x83a <DIO_GetPinValue+0xb2>
 836:	55 95       	asr	r21
 838:	47 95       	ror	r20
 83a:	8a 95       	dec	r24
 83c:	e2 f7       	brpl	.-8      	; 0x836 <DIO_GetPinValue+0xae>
 83e:	ca 01       	movw	r24, r20
 840:	81 70       	andi	r24, 0x01	; 1
 842:	89 83       	std	Y+1, r24	; 0x01
 844:	14 c0       	rjmp	.+40     	; 0x86e <__stack+0xf>
		case PORTD: PinValue = GET_BIT(PIND_REG,PIN); break;
 846:	e0 e3       	ldi	r30, 0x30	; 48
 848:	f0 e0       	ldi	r31, 0x00	; 0
 84a:	80 81       	ld	r24, Z
 84c:	28 2f       	mov	r18, r24
 84e:	30 e0       	ldi	r19, 0x00	; 0
 850:	8b 81       	ldd	r24, Y+3	; 0x03
 852:	88 2f       	mov	r24, r24
 854:	90 e0       	ldi	r25, 0x00	; 0
 856:	a9 01       	movw	r20, r18
 858:	02 c0       	rjmp	.+4      	; 0x85e <DIO_GetPinValue+0xd6>
 85a:	55 95       	asr	r21
 85c:	47 95       	ror	r20
 85e:	8a 95       	dec	r24
 860:	e2 f7       	brpl	.-8      	; 0x85a <DIO_GetPinValue+0xd2>
 862:	ca 01       	movw	r24, r20
 864:	81 70       	andi	r24, 0x01	; 1
 866:	89 83       	std	Y+1, r24	; 0x01
 868:	02 c0       	rjmp	.+4      	; 0x86e <__stack+0xf>
		default:PinValue=DIO_CHOISE_NOT_FOUND;//error
 86a:	85 e0       	ldi	r24, 0x05	; 5
 86c:	89 83       	std	Y+1, r24	; 0x01
			break;
	}//switch
	return PinValue;
 86e:	89 81       	ldd	r24, Y+1	; 0x01
}//function
 870:	0f 90       	pop	r0
 872:	0f 90       	pop	r0
 874:	0f 90       	pop	r0
 876:	0f 90       	pop	r0
 878:	0f 90       	pop	r0
 87a:	cf 91       	pop	r28
 87c:	df 91       	pop	r29
 87e:	08 95       	ret

00000880 <DIO_Getau8_PORTValue>:
uint8_t DIO_Getau8_PORTValue(uint8_t au8_PORT)
{
 880:	df 93       	push	r29
 882:	cf 93       	push	r28
 884:	00 d0       	rcall	.+0      	; 0x886 <DIO_Getau8_PORTValue+0x6>
 886:	00 d0       	rcall	.+0      	; 0x888 <DIO_Getau8_PORTValue+0x8>
 888:	cd b7       	in	r28, 0x3d	; 61
 88a:	de b7       	in	r29, 0x3e	; 62
 88c:	8a 83       	std	Y+2, r24	; 0x02
	uint8_t PinValue;
	switch(au8_PORT)
 88e:	8a 81       	ldd	r24, Y+2	; 0x02
 890:	28 2f       	mov	r18, r24
 892:	30 e0       	ldi	r19, 0x00	; 0
 894:	3c 83       	std	Y+4, r19	; 0x04
 896:	2b 83       	std	Y+3, r18	; 0x03
 898:	8b 81       	ldd	r24, Y+3	; 0x03
 89a:	9c 81       	ldd	r25, Y+4	; 0x04
 89c:	81 30       	cpi	r24, 0x01	; 1
 89e:	91 05       	cpc	r25, r1
 8a0:	d1 f0       	breq	.+52     	; 0x8d6 <DIO_Getau8_PORTValue+0x56>
 8a2:	2b 81       	ldd	r18, Y+3	; 0x03
 8a4:	3c 81       	ldd	r19, Y+4	; 0x04
 8a6:	22 30       	cpi	r18, 0x02	; 2
 8a8:	31 05       	cpc	r19, r1
 8aa:	2c f4       	brge	.+10     	; 0x8b6 <DIO_Getau8_PORTValue+0x36>
 8ac:	8b 81       	ldd	r24, Y+3	; 0x03
 8ae:	9c 81       	ldd	r25, Y+4	; 0x04
 8b0:	00 97       	sbiw	r24, 0x00	; 0
 8b2:	61 f0       	breq	.+24     	; 0x8cc <DIO_Getau8_PORTValue+0x4c>
 8b4:	1f c0       	rjmp	.+62     	; 0x8f4 <DIO_Getau8_PORTValue+0x74>
 8b6:	2b 81       	ldd	r18, Y+3	; 0x03
 8b8:	3c 81       	ldd	r19, Y+4	; 0x04
 8ba:	22 30       	cpi	r18, 0x02	; 2
 8bc:	31 05       	cpc	r19, r1
 8be:	81 f0       	breq	.+32     	; 0x8e0 <DIO_Getau8_PORTValue+0x60>
 8c0:	8b 81       	ldd	r24, Y+3	; 0x03
 8c2:	9c 81       	ldd	r25, Y+4	; 0x04
 8c4:	83 30       	cpi	r24, 0x03	; 3
 8c6:	91 05       	cpc	r25, r1
 8c8:	81 f0       	breq	.+32     	; 0x8ea <DIO_Getau8_PORTValue+0x6a>
 8ca:	14 c0       	rjmp	.+40     	; 0x8f4 <DIO_Getau8_PORTValue+0x74>
	{
		case PORTA: PinValue =*((uint8_t*)0x39); break;
 8cc:	e9 e3       	ldi	r30, 0x39	; 57
 8ce:	f0 e0       	ldi	r31, 0x00	; 0
 8d0:	80 81       	ld	r24, Z
 8d2:	89 83       	std	Y+1, r24	; 0x01
 8d4:	11 c0       	rjmp	.+34     	; 0x8f8 <DIO_Getau8_PORTValue+0x78>
		case PORTB: PinValue =*((uint8_t *)0x36); break;
 8d6:	e6 e3       	ldi	r30, 0x36	; 54
 8d8:	f0 e0       	ldi	r31, 0x00	; 0
 8da:	80 81       	ld	r24, Z
 8dc:	89 83       	std	Y+1, r24	; 0x01
 8de:	0c c0       	rjmp	.+24     	; 0x8f8 <DIO_Getau8_PORTValue+0x78>
		case PORTC: PinValue =*((uint8_t*)0x33); break;
 8e0:	e3 e3       	ldi	r30, 0x33	; 51
 8e2:	f0 e0       	ldi	r31, 0x00	; 0
 8e4:	80 81       	ld	r24, Z
 8e6:	89 83       	std	Y+1, r24	; 0x01
 8e8:	07 c0       	rjmp	.+14     	; 0x8f8 <DIO_Getau8_PORTValue+0x78>
		case PORTD: PinValue =*((uint8_t*)0x30); break;
 8ea:	e0 e3       	ldi	r30, 0x30	; 48
 8ec:	f0 e0       	ldi	r31, 0x00	; 0
 8ee:	80 81       	ld	r24, Z
 8f0:	89 83       	std	Y+1, r24	; 0x01
 8f2:	02 c0       	rjmp	.+4      	; 0x8f8 <DIO_Getau8_PORTValue+0x78>
		default:PinValue=DIO_CHOISE_NOT_FOUND;//error
 8f4:	85 e0       	ldi	r24, 0x05	; 5
 8f6:	89 83       	std	Y+1, r24	; 0x01
			break;
	}//switch
	return PinValue;
 8f8:	89 81       	ldd	r24, Y+1	; 0x01
}
 8fa:	0f 90       	pop	r0
 8fc:	0f 90       	pop	r0
 8fe:	0f 90       	pop	r0
 900:	0f 90       	pop	r0
 902:	cf 91       	pop	r28
 904:	df 91       	pop	r29
 906:	08 95       	ret

00000908 <GIE_voidEnable>:
#include "GIE_privet.h"



void GIE_voidEnable(void)
{
 908:	df 93       	push	r29
 90a:	cf 93       	push	r28
 90c:	cd b7       	in	r28, 0x3d	; 61
 90e:	de b7       	in	r29, 0x3e	; 62
	SET_BIT(SREG , SREG_I);
 910:	af e5       	ldi	r26, 0x5F	; 95
 912:	b0 e0       	ldi	r27, 0x00	; 0
 914:	ef e5       	ldi	r30, 0x5F	; 95
 916:	f0 e0       	ldi	r31, 0x00	; 0
 918:	80 81       	ld	r24, Z
 91a:	80 68       	ori	r24, 0x80	; 128
 91c:	8c 93       	st	X, r24
}
 91e:	cf 91       	pop	r28
 920:	df 91       	pop	r29
 922:	08 95       	ret

00000924 <GIE_voidDisable>:
void GIE_voidDisable(void)
{
 924:	df 93       	push	r29
 926:	cf 93       	push	r28
 928:	cd b7       	in	r28, 0x3d	; 61
 92a:	de b7       	in	r29, 0x3e	; 62
	
	CLR_BIT( SREG , SREG_I);
 92c:	af e5       	ldi	r26, 0x5F	; 95
 92e:	b0 e0       	ldi	r27, 0x00	; 0
 930:	ef e5       	ldi	r30, 0x5F	; 95
 932:	f0 e0       	ldi	r31, 0x00	; 0
 934:	80 81       	ld	r24, Z
 936:	8f 77       	andi	r24, 0x7F	; 127
 938:	8c 93       	st	X, r24
	
}
 93a:	cf 91       	pop	r28
 93c:	df 91       	pop	r29
 93e:	08 95       	ret

00000940 <main>:
#include "DIO_interface.h"




void main(){
 940:	df 93       	push	r29
 942:	cf 93       	push	r28
 944:	cd b7       	in	r28, 0x3d	; 61
 946:	de b7       	in	r29, 0x3e	; 62
	DIO_SetPinDirection( PORTB ,  PIN4 , OUTPUT);
 948:	81 e0       	ldi	r24, 0x01	; 1
 94a:	64 e0       	ldi	r22, 0x04	; 4
 94c:	41 e0       	ldi	r20, 0x01	; 1
 94e:	0e 94 36 00 	call	0x6c	; 0x6c <DIO_SetPinDirection>
	DIO_SetPinDirection( PORTB ,  PIN2 , INPUT);
 952:	81 e0       	ldi	r24, 0x01	; 1
 954:	62 e0       	ldi	r22, 0x02	; 2
 956:	40 e0       	ldi	r20, 0x00	; 0
 958:	0e 94 36 00 	call	0x6c	; 0x6c <DIO_SetPinDirection>
	DIO_SetPinValue(PORTB ,  PIN4 , LOW);
 95c:	81 e0       	ldi	r24, 0x01	; 1
 95e:	64 e0       	ldi	r22, 0x04	; 4
 960:	40 e0       	ldi	r20, 0x00	; 0
 962:	0e 94 2f 01 	call	0x25e	; 0x25e <DIO_SetPinValue>
	 /*pull up resistor */
	DIO_SetPinValue(PORTB,PIN2,LOW);
 966:	81 e0       	ldi	r24, 0x01	; 1
 968:	62 e0       	ldi	r22, 0x02	; 2
 96a:	40 e0       	ldi	r20, 0x00	; 0
 96c:	0e 94 2f 01 	call	0x25e	; 0x25e <DIO_SetPinValue>
	while(1){

            if(DIO_GetPinValue(PORTB ,PIN2) == 1)
 970:	81 e0       	ldi	r24, 0x01	; 1
 972:	62 e0       	ldi	r22, 0x02	; 2
 974:	0e 94 c4 03 	call	0x788	; 0x788 <DIO_GetPinValue>
 978:	81 30       	cpi	r24, 0x01	; 1
 97a:	31 f4       	brne	.+12     	; 0x988 <main+0x48>
            {
            	DIO_SetPinValue(PORTB,PIN4,HIGH);
 97c:	81 e0       	ldi	r24, 0x01	; 1
 97e:	64 e0       	ldi	r22, 0x04	; 4
 980:	41 e0       	ldi	r20, 0x01	; 1
 982:	0e 94 2f 01 	call	0x25e	; 0x25e <DIO_SetPinValue>
 986:	f4 cf       	rjmp	.-24     	; 0x970 <main+0x30>
            }
            else
            {
            	DIO_SetPinValue(PORTB,PIN4,LOW);
 988:	81 e0       	ldi	r24, 0x01	; 1
 98a:	64 e0       	ldi	r22, 0x04	; 4
 98c:	40 e0       	ldi	r20, 0x00	; 0
 98e:	0e 94 2f 01 	call	0x25e	; 0x25e <DIO_SetPinValue>
 992:	ee cf       	rjmp	.-36     	; 0x970 <main+0x30>

00000994 <_exit>:
 994:	f8 94       	cli

00000996 <__stop_program>:
 996:	ff cf       	rjmp	.-2      	; 0x996 <__stop_program>
